name: Nova Unit Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]
  workflow_dispatch:

jobs:
  unit:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - suite: tensor
            path: tests/unit/tensor
          - suite: activations
            path: tests/unit/activations

    steps:
      - name: "Checkout code"
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: "Set up Python 3.13"
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: "Install system build deps"
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            build-essential cmake ninja-build curl \
            python3-dev pybind11-dev \
            libopenblas-dev liblapack-dev \
            libeigen3-dev libgtest-dev

      - name: "Install Poetry & Python deps"
        env:
          POETRY_HOME: ${{ runner.temp }}/poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          export PATH="$POETRY_HOME/bin:$HOME/.local/bin:$PATH"
          poetry --version
          poetry config virtualenvs.create false
          poetry install --no-root --no-interaction --no-ansi

      - name: "CMake configure (preset: dev)"
        run: |
          poetry shell
          cmake --preset dev

      - name: "CMake build (preset: dev)"
        run: |
          poetry shell
          cmake --build --preset dev -j

      - name: "Export PYTHONPATH"
        run: |
          echo "PYTHONPATH=$PWD/nova/src/backend/core/clib:$PWD" >> $GITHUB_ENV

      - name: "Run ${{ matrix.suite }} unit tests"
        env:
          POETRY_HOME: ${{ runner.temp }}/poetry
          PATH: ${{ runner.temp }}/poetry/bin:${{ env.PATH }}
        run: |
          poetry run python -V
          poetry run pytest -v ${{ matrix.path }}
